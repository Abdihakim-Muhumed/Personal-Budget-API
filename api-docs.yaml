tags:
  - name: envelope
    description: Everything about the envelopes in the budget
  - name: transaction
    description: All about the transactions in the budget.
paths:
  /envelope:
    get:
      tags:
        - envelope
      summary: Get all envelopes in your budget
      description: Retrieves all your envelopes
      operationId: getAllEnvelopes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Envelope'
        '500':
          description: Server Error
    post:
      tags:
        - envelope
      summary: Add a new envelope to the budget
      description: Adds a new envelope to the api and returns it
      operationId: addNewEnvelope
      parameters:
        - name: id
          in: query
          description: ID for the new envelope
          required: false
          schema:
            type: integer
            format: int64
        - name: title
          in: query
          description: Title of the envelope.
          required: true
          schema:
            type: string
        - name: description
          in: query
          description: Small description of the envelope
          schema:
            type: string
        - name: balance
          in: query
          description: Starting budget balance for this specific envelope
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope'
        '400':
          description: Invalid input     
  /envelope/{id}:
    get:
      tags:
        - envelope
      summary: Find envelope by ID
      description: Returns a single envelope
      operationId: getEnvelopeById
      parameters:
        - name: id
          in: path
          description: ID of envelope to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Envelope'
        '400':
          description: Invalid ID supplied
        '404':
          description: Envelope not found
    put:
      tags:
        - envelope
      summary: Updates an envelope in the budget.
      description: ''
      operationId: updateEnvelope
      parameters:
        - name: id
          in: path
          description: ID of the envelope that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: title
          in: query
          description: New title for the envelope.
          schema:
            type: string
        - name: description
          in: query
          description: New description for the envelope
          schema:
            type: string
        - name: balance
          in: query
          description: New balance for the envelope
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
    delete:
      tags:
        - envelope
      summary: Deletes an envelope
      description: delete an envelope from the budget
      operationId: deleteEnvelope
      parameters:
        - name: id
          in: path
          description: Id of the envelope to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operation Successful
        '400':
          description: Invalid input
        '404':
          description: Envelope not found        
  /envelope/{id}/spend:
    put:
      tags:
        - envelope
      summary: Updates envelope budget
      description: 'Subtracts specified amount from the balance of the envelope and returns it with updated balance.'
      operationId: updateEnvelopeBalance
      parameters:
        - name: id
          in: path
          description: ID of envelope to update balance for.
          required: true
          schema:
            type: integer
            format: int64
        - name: amount
          in: query
          description: Amount to substract from the envelope balance.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope'
        '403':
          description: No enough balance to spend the specified amount.
        '400':
          description: Invalid input.          
  /envelope/transfer/{from}/{to}:
    post:
      tags:
        - envelope
      summary: Transfers budget balance.
      description: Transfers balance from one envelope to another.
      operationId: transferBudget
      parameters:
        - name: from
          in: path
          description: Id of the envelope to transfer balance from
          required: true
          schema:
            type: integer
            format: int64
        - name: to
          in: path
          description: Id of the envelope to transfer balance to
          required: true
          schema:
            type: integer
            format: int64
        - name: amount
          in: query
          description: Amount to transfer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid input
        '403': 
          description: No enough balance to transfer the specified amount
        '500':
          description: Server Error
  /transaction:
    get:
      tags:
        - transaction
      summary: Get all transactions.
      description: Retrieves all transactions from the database
      operationId: getAllTransactions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
        '500':
          description: Server Error
    post:
      tags:
        - transaction
      summary: Add a new transaction to the budget
      description: Adds a new transaction to the api and returns it
      operationId: addNewTransaction
      parameters:
        - name: id
          in: query
          description: ID for the new transaction
          required: false
          schema:
            type: integer
            format: int64
        - name: date
          in: query
          description: Date of the transaction. Default is current.
          required: false
          schema:
            type: date
        - name: reciepient
          in: query
          required: false
          description: Description of the reciepient of the payment.
          schema:
            type: string
        - name: amount
          in: query
          required: true 
          description: Payment amount of the transaction.
          schema:
            type: integer
            format: int64
        - name: envelope_id
          in: query
          required: true 
          description: ID of the envelope from which the payment is made.
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '403':
          description: Forbidden operation
        '500':
          description: Internal Server Error
  /transaction/{id}:
    get:
      tags:
        - transaction
      summary: Get transaction by ID.
      description: Retrieves the transaction with the provided id
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the transaction to fetch.
          schema:
             type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction'
        '500':
          description: Internal Server Error
        '404':
          description: Transaction not found
    delete:
      tags:
        - transaction
      summary: Delete a transaction
      description: Deletes a transaction of the provided id.
      operationId: deleteTransaction
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the transaction to delete.
          schema:
             type: integer
      responses:
        '200':
          description: Operation Successful
        '400':
          description: Invalid input
        '404':
          description: Transaction not found
  /transaction/{envelope_id}:
    get:
      tags:
        - transaction
      summary: Get transaction by envelope_ID.
      description: Retrieves the transaction with the provided envelope_id
      operationId: getTransactionByEnvelopeId
      parameters:
        - name: envelope_id
          in: path
          required: true
          description: Envelope id of the transaction to fetch.
          schema:
             type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction'
        '500':
          description: Internal Server Error
        '404':
          description: Transaction not found
components:
  schemas:
    Envelope:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: Dining Out
        description:
          type: string
          example: I will use this envelope for only expenses that are for dining out with or without friends.
        balance:
          type: integer
          format: int64
          example: 3000
    Transaction:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        date:
          type: date
          example: 2024-01-22T21:00:00.000Z
        amount:
          type: integer
          format: int64
          example: 2500
        envelope_id:
          type: integer
          format: int64
          example: 4
        reciepient:
          type: string
          example: Artcaffe
